//
//  DependencyDebug.swift
//  FigrClub
//
//  Created by Emerson Balahan Varona on 7/7/25.
//

import Foundation


#if DEBUG
/// Herramienta de diagn√≥stico para verificar la configuraci√≥n de dependencias
final class DependencyDebug {
    
    static func verifyAllDependencies() {
        print("üîç [DependencyDebug] Verificando dependencias...")
        
        // Verificar dependencias cr√≠ticas
        verifyCoreDependencies()
        verifyAuthDependencies()
        verifyViewModelDependencies()
        
        print("‚úÖ [DependencyDebug] Verificaci√≥n completada")
    }
    
    private static func verifyCoreDependencies() {
        print("üì¶ [DependencyDebug] Verificando dependencias core...")
        
        // Verificar APIServiceProtocol
        if DependencyInjector.shared.resolveOptional(APIServiceProtocol.self) != nil {
            print("‚úÖ APIServiceProtocol - OK")
        } else {
            print("‚ùå APIServiceProtocol - FALTANTE")
        }
        
        // Verificar TokenManager
        if DependencyInjector.shared.resolveOptional(TokenManager.self) != nil {
            print("‚úÖ TokenManager - OK")
        } else {
            print("‚ùå TokenManager - FALTANTE")
        }
    }
    
    private static func verifyAuthDependencies() {
        print("üîê [DependencyDebug] Verificando dependencias de autenticaci√≥n...")
        
        // Verificar ValidationServiceProtocol
        if DependencyInjector.shared.resolveOptional(ValidationServiceProtocol.self) != nil {
            print("‚úÖ ValidationServiceProtocol - OK")
        } else {
            print("‚ùå ValidationServiceProtocol - FALTANTE")
        }
        
        // Verificar AuthServiceProtocol
        if DependencyInjector.shared.resolveOptional(AuthServiceProtocol.self) != nil {
            print("‚úÖ AuthServiceProtocol - OK")
        } else {
            print("‚ùå AuthServiceProtocol - FALTANTE")
        }
        
        // Verificar AuthRepositoryProtocol
        if DependencyInjector.shared.resolveOptional(AuthRepositoryProtocol.self) != nil {
            print("‚úÖ AuthRepositoryProtocol - OK")
        } else {
            print("‚ùå AuthRepositoryProtocol - FALTANTE")
        }
        
        // Verificar AuthManager
        if DependencyInjector.shared.resolveOptional(AuthManager.self) != nil {
            print("‚úÖ AuthManager - OK")
        } else {
            print("‚ùå AuthManager - FALTANTE")
        }
    }
    
    private static func verifyViewModelDependencies() {
        print("üé≠ [DependencyDebug] Verificando ViewModels...")
        
        // Verificar AuthViewModel
        if DependencyInjector.shared.resolveOptional(AuthViewModel.self) != nil {
            print("‚úÖ AuthViewModel - OK")
        } else {
            print("‚ùå AuthViewModel - FALTANTE")
        }
    }
}

#endif

